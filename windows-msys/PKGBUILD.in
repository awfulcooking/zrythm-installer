# Maintainer: Alexandros Theodotou <alex at zrythm dot org>
_realname=zrythm@DASH_TRIAL@
_zplugins_ver=@ZPLUGINS_VER@
_zrythm_builddir="build-zrythm-${MINGW_CHOST}"
_zplugins_builddir="build-zplugins-${MINGW_CHOST}"
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=@ZRYTHM_PKG_VERSION@
pkgrel=2
arch=('any')
pkgdesc='a highly automated and intuitive digital audio workstation (mingw-w64)'
depends=("${MINGW_PACKAGE_PREFIX}-gtk3"
         "${MINGW_PACKAGE_PREFIX}-cantarell-fonts"
         "${MINGW_PACKAGE_PREFIX}-rubberband"
         "${MINGW_PACKAGE_PREFIX}-libsndfile"
         "${MINGW_PACKAGE_PREFIX}-libsamplerate"
         "${MINGW_PACKAGE_PREFIX}-lilv"
         "${MINGW_PACKAGE_PREFIX}-jack2-bin"
         "${MINGW_PACKAGE_PREFIX}-gtksourceview4"
         "${MINGW_PACKAGE_PREFIX}-graphviz"
         "${MINGW_PACKAGE_PREFIX}-dlfcn"
         "${MINGW_PACKAGE_PREFIX}-fftw"
         "${MINGW_PACKAGE_PREFIX}-SDL2"
         "${MINGW_PACKAGE_PREFIX}-zstd"
         "${MINGW_PACKAGE_PREFIX}-libyaml")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-gettext"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "guile"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python3")
options=('!strip' '!staticlibs')
license=("AGPL3")
url="https://www.zrythm.org"
#install=${_realname}-${CARCH}.install
source=("zrythm-$pkgver.tar.gz" "zplugins-$_zplugins_ver.tar.gz")
sha256sums=('SKIP' 'SKIP')

prepare() {
  pushd "${srcdir}"/zrythm-${pkgver}
  sed -i -e "s|\['benchmarks/dsp', true\]|#|g" tests/meson.build
  popd
}

build() {
  [[ -d "$_zrythm_builddir" ]] && rm -rf "$_zrythm_builddir"
  [[ -d "$_zplugins_builddir" ]] && rm -rf "$_zplugins_builddir"

  # build zrythm
  mkdir -p $_zrythm_builddir
  pushd $_zrythm_builddir
  sed -i -e '94s/translator/"invalid"/' \
    ${srcdir}/zrythm-${pkgver}/scripts/gen-translators-list.scm
  ${MINGW_PREFIX}/bin/meson \
    -Dsdl=enabled \
    -Drtaudio=auto \
    -Drtmidi=auto \
    -Dlsp_dsp=enabled \
    -Dstatic_deps=false \
    -Dstatic_lsp_dsp=true \
    -Djack=enabled \
    -Dguile=disabled \
    -Dfallback_version=@ZRYTHM_PKG_VERSION@ \
    -Dphone_home=enabled \
    -Dmanpage=false \
    -Dtrial_ver=@TRIAL_TRUE_FALSE@ \
    -Dinstaller_ver=true -Dcarla=enabled \
    -Dcarla_binaries_dir_32bit='C:\msys64\mingw32\lib\carla' \
    --buildtype=debugoptimized \
    -Dextra_debug_info=true \
    -Dtests=false \
    "../zrythm-${pkgver}"
  ninja
  cp /mingw64/lib/carla/libcarla_host-plugin.dll ./src/
  popd

  # build zplugins
  mkdir -p "$_zplugins_builddir"
  pushd "$_zplugins_builddir"
  ls -l
  ${MINGW_PREFIX}/bin/meson \
    --buildtype=release \
    "../zplugins-${_zplugins_ver}"
  ninja
  popd
}

check() {
  pushd $_zrythm_builddir
  ninja test
  src/zrythm.exe --version
  popd

  pushd "$_zplugins_builddir"
  ninja test
  popd
}

package() {
  destdir="${pkgdir}${MINGW_PREFIX}"

  pushd "$_zrythm_builddir"
  DESTDIR="$destdir" ninja install
  install -Dm644 "${srcdir}/zrythm-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/zrythm/COPYING"
  popd

  pushd "$_zplugins_builddir"
  DESTDIR="$destdir" ninja install
  popd
}
