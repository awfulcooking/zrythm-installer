---

- hosts: linuxmint193
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/prepare_ubuntu.yml"

    - name: Install build essential
      become: yes
      apt:
        name: ['build-essential']

    - name: Make build
      shell: |
        cd /tmp/zrythm-installer
        make clean
        make linuxmint193

    - name: Deploy artifacts
      include_tasks: "{{ playbook_dir }}/tasks/ubuntu_deploy.yml"

- hosts: ubuntu1804
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: ubuntu1810
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: ubuntu2004
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: ubuntu1910
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: debian9
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: debian10
  tasks:
    - name: Do
      include_tasks: "{{ playbook_dir }}/tasks/debian_sequence.yml"

- hosts: archlinux
  tasks:
    - name: Copy file from master
      include_tasks: "{{ playbook_dir }}/tasks/copy_from_master.yml"

    - name: Ensure dependencies are installed
      become: yes
      pacman:
        name: ['gtk3', 'lilv', 'libx11', 'jack', 'libsndfile',
        'libyaml', 'libsamplerate', 'alsa-lib', 'fftw',
        'python', 'gettext', 'sed', 'meson', 'ninja',
        'help2man', 'python-sphinx', 'ladspa', 'lv2',
        'sdl2', 'guile', 'gtksourceview4', 'graphviz',
        'vim', 'meson', 'rubberband', 'qt5-base' ]
        update_cache: yes
        state: present

    - name: Make Arch build
      shell: cd /tmp/zrythm-installer && make clean && make archlinux

    - name: Deploy normal version
      fetch: src=/tmp/zrythm-installer/build/archlinux/zrythm-{{ version }}-1-x86_64.pkg.tar.xz dest=./artifacts/archlinux/zrythm-{{ version }}-1-x86_64.pkg.tar.xz flat=yes

    - name: Deploy trial version
      fetch: src=/tmp/zrythm-installer/build/archlinux/zrythm-trial-{{ version }}-1-x86_64.pkg.tar.xz dest=./artifacts/archlinux/zrythm-trial-{{ version }}-1-x86_64.pkg.tar.xz flat=yes

    - name: Zip and deploy plugins
      include_tasks: "{{ playbook_dir }}/tasks/deploy_zplugins.yml"

- hosts: fedora31
  tasks:
    - name: Copy file from master
      include_tasks: "{{ playbook_dir }}/tasks/copy_from_master.yml"

    - name: Ensure dependencies are installed
      become: yes
      dnf:
        name: ['gcc-c++', 'gcc', 'pkgconfig',
        'gtk3-devel', 'python3',
        'libsndfile-devel', 'lv2-devel',
        'lilv-devel', 'guile22-devel',
        'libyaml-devel', 'libsamplerate-devel',
        'gettext', 'sed', 'alsa-lib-devel',
        'ladspa-devel', 'fftw-devel',
        'portaudio-devel', 'help2man',
        'graphviz-devel',
        'vim', 'meson', 'rpm-build',
        'SDL2-devel', 'librsvg2-devel',
        'gtksourceview3-devel',
        'jack-audio-connection-kit-devel',
        'libX11-devel', 'qt5-devel', 'make',
        'rubberband-devel' ]
        update_cache: yes
        state: present

    - name: Make
      shell: cd /tmp/zrythm-installer && make clean && make fedora31
      environment:
        PKG_CONFIG_PATH: /usr/local/lib/pkgconfig

    - name: Deploy normal version
      fetch: src=/home/ansible/rpmbuild/RPMS/x86_64/zrythm-{{ version }}-1.fc31.x86_64.rpm dest=./artifacts/fedora31/zrythm-{{ version }}-1.fc31.x86_64.rpm flat=yes

    - name: Deploy trial version
      fetch: src=/home/ansible/rpmbuild/RPMS/x86_64/zrythm-trial-{{ version }}-1.fc31.x86_64.rpm dest=./artifacts/fedora31/zrythm-trial-{{ version }}-1.fc31.x86_64.rpm flat=yes

    - name: Zip and deploy ZLFO
      include_tasks: "{{ playbook_dir }}/tasks/deploy_zplugins.yml"

# NOTE: for opensuse first add this repository:
# https://software.opensuse.org//download.html?project=home:rncbc&package=lilv
# also make sure to disable the CD repository:
# https://kerneltalks.com/troubleshooting/failed-to-mount-cd-error-in-zypper/
# Also remember to run `rpmdev-setuptree`
- hosts: opensuse-tumbleweed
  tasks:
    - name: Copy file from master
      include_tasks: "{{ playbook_dir }}/tasks/copy_from_master.yml"

    - name: Ensure dependencies are installed
      become: yes
      zypper:
        name: ['gcc-c++', 'gcc', 'pkgconfig',
        'gtk3-devel', 'python3',
        'libsndfile-devel',
        'libyaml-devel', 'libsamplerate-devel',
        'gettext', 'sed', 'alsa-lib-devel',
        'ladspa-devel', 'fftw-devel',
        'portaudio-devel', 'help2man',
        'vim', 'meson', 'rpm-build', 'git',
        'lv2', 'liblilv-devel', 'guile-devel',
        'rpmdevtools', 'update-desktop-files',
        'fftw3-threads-devel',
        'graphviz-devel',
        'SDL2-devel', 'librsvg2-devel',
        'gtksourceview4-devel',
        'jack-audio-connection-kit-devel',
        'libX11-devel', 'make',
        'librubberband-devel' ]
        update_cache: yes
        state: present

    - name: Make
      shell: |
        cd /tmp/zrythm-installer
        make clean
        make opensuse-tumbleweed
      environment:
        PKG_CONFIG_PATH: /usr/local/lib/pkgconfig

    - name: Deploy normal version
      fetch: src=/home/ansible/rpmbuild/RPMS/x86_64/zrythm-{{ version }}-1.x86_64.rpm dest=./artifacts/{{ inventory_hostname }}/zrythm-{{ version }}-1.{{ inventory_hostname }}.x86_64.rpm flat=yes

    - name: Deploy trial version
      fetch: src=/home/ansible/rpmbuild/RPMS/x86_64/zrythm-trial-{{ version }}-1.x86_64.rpm dest=./artifacts/{{ inventory_hostname }}/zrythm-trial-{{ version }}-1.{{ inventory_hostname }}.x86_64.rpm flat=yes

    - name: Zip and deploy ZLFO
      include_tasks: "{{ playbook_dir }}/tasks/deploy_zplugins.yml"
