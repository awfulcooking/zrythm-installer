# Maintainer: Alexandros Theodotou <alex at zrythm dot org>
_realname=zrythm
_zplugins_ver=@ZPLUGINS_VERSION@
_zrythm_builddir="build-zrythm-${MINGW_CHOST}"
_zplugins_builddir="build-zplugins-${MINGW_CHOST}"
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=@VERSION@
pkgrel=2
arch=('any')
pkgdesc='a highly automated and intuitive digital audio workstation (mingw-w64)'
depends=("${MINGW_PACKAGE_PREFIX}-gtk3"
         "${MINGW_PACKAGE_PREFIX}-cantarell-fonts"
         "${MINGW_PACKAGE_PREFIX}-rubberband"
         "${MINGW_PACKAGE_PREFIX}-libsndfile"
         "${MINGW_PACKAGE_PREFIX}-libsamplerate"
         "${MINGW_PACKAGE_PREFIX}-lilv"
         "${MINGW_PACKAGE_PREFIX}-jack2"
         "${MINGW_PACKAGE_PREFIX}-gtksourceview4"
         "${MINGW_PACKAGE_PREFIX}-graphviz"
         "${MINGW_PACKAGE_PREFIX}-dlfcn"
         "${MINGW_PACKAGE_PREFIX}-fftw"
         "${MINGW_PACKAGE_PREFIX}-SDL2"
         "${MINGW_PACKAGE_PREFIX}-zstd"
         "${MINGW_PACKAGE_PREFIX}-libyaml")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-gettext"
             "guile"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python3")
options=('strip' '!staticlibs')
license=("AGPL3")
url="https://www.zrythm.org"
#install=${_realname}-${CARCH}.install
source=("zrythm-$pkgver.tar.gz" "zplugins-$_zplugins_ver.tar.gz")
sha256sums=('SKIP' 'SKIP')

prepare() {
  cd "${srcdir}"/zrythm-${pkgver}
}

build() {
  [[ -d "$_zrythm_builddir" ]] && rm -rf "$_zrythm_builddir"
  [[ -d "$_zplugins_builddir" ]] && rm -rf "$_zplugins_builddir"

  # build zrythm
  mkdir -p $_zrythm_builddir && cd $_zrythm_builddir
  sed -i -e '94s/translator/"invalid"/' \
    ${srcdir}/zrythm-${pkgver}/scripts/gen-translators-list.scm
  ${MINGW_PREFIX}/bin/meson \
    -Dsdl=enabled \
    -Drtaudio=auto \
    -Drtmidi=auto \
    -Djack=enabled \
    -Dguile=disabled \
    -Dfallback_version=@VERSION@ \
    -Dmanpage=false \
    -Dtrial_ver=false \
    -Dwindows_release=true -Dcarla=enabled \
    --buildtype=debugoptimized \
    -Dextra_debug_info=true \
    "../zrythm-${pkgver}"
  ninja

  # build zplugins
  cd ${srcdir}

  make -C "zplugins-v$_zplugins_ver/ext/Soundpipe" || true
  make CC="$MINGW_PREFIX/bin/x86_64-w64-mingw32-gcc.exe" -C "zplugins-v$_zplugins_ver/ext/Soundpipe"

  mkdir -p "$_zplugins_builddir" && cd "$_zplugins_builddir"
  ${MINGW_PREFIX}/bin/meson \
    --buildtype=release \
    "../zplugins-v${_zplugins_ver}"
}

package() {
  destdir="${pkgdir}${MINGW_PREFIX}"

  pushd "$_zrythm_builddir"
  DESTDIR="$destdir" ninja install
  install -Dm644 "${srcdir}/zrythm-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/zrythm/COPYING"
  popd

  pushd "$_zplugins_builddir"
  DESTDIR="$destdir" ninja install
  popd
}
