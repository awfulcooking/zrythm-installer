#!/bin/bash
#
# Copyright (C) 2019-2020 Alexandros Theodotou <alex at zrythm dot org>
#
#  This file is part of Zrythm
#
#  Zrythm is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Zrythm is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with Zrythm.  If not, see <https://www.gnu.org/licenses/>.

set -e

zrythm_ver="@ZRYTHM_PKG_VERSION@"
architecture="amd64"
trial="@DASH_TRIAL@"

distro_identifier=""

distro_ver=0
os_release_file=

if [ -e /etc/os-release ]; then
  . /etc/os-release
elif [ -e /usr/lib/os-release ]; then
  . /usr/lib/os-release
fi

# ---- Detect debian based systems ----
debian_10_str="Debian GNU/Linux 10"
debian_11_str="Debian GNU/Linux 11"
ubuntu_18_04="Ubuntu 18.04"
ubuntu_19_10_str="Ubuntu 19.10"
ubuntu_20_04_str="Ubuntu 20.04"

zenity_width=360
have_zenity=0
command -v zenity && have_zenity=1 || true

if [[ "$ID" = *"debian"* ]]; then
  if [[ "$VERSION_ID" = *"10"* ]]; then
    echo "found $debian_10_str"
    distro_identifier="debian10"
  elif [[ "$VERSION_ID" = *"11"* ]]; then
    echo "found $debian_11_str"
    distro_identifier="debian11"
  fi
fi

if [[ "$ID" = *"ubuntu"* ]]; then
  if [[ "$VERSION_ID" = *"18.04"* ]]; then
    echo "found $ubuntu_18_04_str"
    distro_identifier="ubuntu1804"
  elif [[ "$VERSION_ID" = *"20.04"* ]]; then
    echo "found $ubuntu_20_04_str"
    distro_identifier="ubuntu2004"
  elif [[ "$VERSION_ID" = *"20.10"* ]]; then
    echo "found $ubuntu_19_10_str"
    distro_identifier="ubuntu2010"
  fi
elif [[ "$ID_LIKE" = *"ubuntu"* ]]; then
  if [[ "$UBUNTU_CODENAME" = *"bionic"* ]]; then
    echo "found $ubuntu_18_04_str"
    distro_identifier="ubuntu1804"
  elif [[ "$UBUNTU_CODENAME" = *"focal"* ]]; then
    echo "found $ubuntu_20_04_str"
    distro_identifier="ubuntu2004"
  fi
fi

# ---- Detect arch systems ----

arch_str="Arch Linux"

if [[ "$ID" = "arch" ]] || [[ "$ID_LIKE" = *"arch"* ]]; then
  echo "found $arch_str"
  architecture="x86_64"
  distro_identifier="archlinux"
fi

# ---- Detect fedora/opensuse ----

fedora_32_str="Fedora 32"

if [[ "$ID" = "fedora" ]]; then
  architecture="x86_64"
  if [[ "$VERSION_ID" = *"32"* ]]; then
    echo "found $fedora_32_str"
    distro_identifier="fedora32"
  fi
fi

# ---- Install ----

show_error()
{
  if [ $have_zenity -ne 0 ]; then
    zenity --error --text="$1" --width $zenity_width
  else
    echo "$1"
  fi
}

show_info()
{
  if [ $have_zenity -ne 0 ]; then
    zenity --info --text="$1" --width $zenity_width
  else
    echo "$1"
  fi
}

if [ -z $distro_identifier ]; then
  show_error "Could not detect your distro or your distro is not supported yet. Please contact the Zrythm maintainers for assistance."
  exit 1
fi

ask_for_root_pw()
{
  ask_for_root_pw_text="Please enter your root password in the terminal to continue (if asked)"
  show_info "$ask_for_root_pw_text"
}

print_install_success()
{
  show_info "Install successful!"
}

proceed=0
proceed_txt="Proceed with the installation of Zrythm$TRIAL v$zrythm_ver?"
if [ $have_zenity -ne 0 ]; then
  zenity --question --text="$proceed_txt" --width $zenity_width
  if [ $? -eq 0 ]; then
    proceed=1
  fi
else
  read -p "$proceed_txt (type Y or y): " -n 1 -r
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    proceed=1
  fi
fi

# install packages
prefix="bin/$distro_identifier/zrythm-$zrythm_ver"
if [ $proceed -ne 0 ]; then
  if [[ $distro_identifier = "ubuntu"* ]] || [[ $distro_identifier = "debian"* ]]; then
    ask_for_root_pw;
    sudo /bin/sh -c \
      "apt update && \
      dpkg -i \"$prefix-1_$architecture.deb\" || \
      apt install -f -y" && \
      print_install_success
  elif [[ $distro_identifier = "fedora"* ]]; then
    ask_for_root_pw;
    sudo /bin/sh -c \
      "dnf -y install \"$prefix-1_$architecture.rpm\"" && \
      print_install_success
  elif [[ $distro_identifier = "archlinux" ]]; then
    ask_for_root_pw;
    sudo /bin/sh -c \
      "pacman -U --noconfirm \"$prefix-1_${architecture}.pkg.tar.zst\"" && \
      print_install_success
  fi
fi
